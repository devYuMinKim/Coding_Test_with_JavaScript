// 제로베이스 프론트엔드 스쿨_Virus
/*
[문제 설명]

현재 제로베이스 컴퓨터 네트워크 망 안에 해킹시도가 감지되고 있습니다. 하지만 어느 곳에서 해킹 시도가 이뤄지고 있지는 모르는 상황이기 때문에 연결되어 있는 네트워크의 가장 가장자리인 노드를 전부 제거하려고 하는 상황입니다.

가장자리인 노드를 판별하는 방법은 연결되어 있는 노드가 1개뿐인 노드를 가장자리 노드라고 할 수 있습니다.



이와 같은 네트워크가 주어지면 가장자리 노드인 13, 8, 3, 4를 제거할 예정입니다.



위와 같은 모양의 네트워크가 남게 됩니다. 위의 예시에서 2번 노드는 3과 4의 노드를 2개 가지고 있지만, 3번과 4번 노드는 모두 가장자리이기 때문에 2개 모두 제거됩니다. 또한 1번 노드의 경우 13번과 2번에 연결되어 있고 13번 노드만 가장자리 노드이기 때문에 제거됩니다.

이 작업을 k번 진행할 수 있고, k번 진행하고 나면 몇 개의 노드가 남는지 반환해주세요.

[제한 사항]

- 제거 횟수 k는 1 이상 10,000이하입니다.

- 노드와 노드를 연결하는 간선이 주어지는데 무방향 간선으로 a, b의 형태입니다.

- 노드 사이에는 루프가 존재하지 않음이 보장되고, 주어지는 그래프의 모양은 트리입니다.

[입력 형식]

- 간선의 정보가 입력된 이차원 배열 tree와 노드 개수 n, 제거 횟수 k가 주어집니다.

[출력 형식]

- k번의 제거를 완료하고 남은 노드 수를 반환해주세요.
*/

function solution(n, k, tree) {
  var answer = 0;
  return answer;
}

console.log(
  solution(14, 1, [
    [14, 1],
    [1, 2],
    [2, 3],
    [2, 4],
    [4, 5],
    [4, 6],
    [2, 7],
    [7, 8],
    [8, 9],
    [8, 10],
    [3, 11],
    [3, 12],
    [1, 13],
    [13, 14],
  ])
); // output: 8
