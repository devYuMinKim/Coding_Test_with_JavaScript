// 제로베이스 프론트엔드 스쿨_Beautiful
/*
[문제 설명]

제로는 아름다운 배열 개념의 창시자입니다. 아름다운 배열이란 다음의 식과 같습니다.
5주차_medium_7.jpg

이 식에 따라, 주어진 배열을 아름다운 배열으로 만들고 싶습니다. 저희가 할 수 있는 일은 기존 배열에서 숫자를 하나씩 바꿔가며 아름다운 배열이 되도록 만들 수 있는데, 계속 반복하여 아름다운 배열이 될 때까지 몇번의 작업이 최소한으로 필요한지 반환해주시면 됩니다.

예를 들어 [1, 1, 2, 2] 배열이 주어졌을 때, 이 배열을 아름다운 배열으로 만들 수 있는 최소한의 횟수는 2회로 [1, 1, 1, 1]으로 바꾸면 아름다운 배열이 됩니다.

또한, 소수점으로도 이 배열을 바꿀 수 있습니다. 만약 [3, -2, 4, -1, -4, 0]으로 배열이 주어졌을 때, 이 배열을 [-2.5, -2, -1.5, -1, -0.5, 0]으로 변경하면 아름다운 배열이 됩니다. 이 때 소요된 횟수는 3회입니다. 3회보다 더 작은 횟수로 아름다운 배열을 만드는 방법은 없습니다.

[제한 사항]

- 배열의 길이는 1 이상 70 이하입니다.

- 배열의 각 원소는 -100부터 100까지 존재합니다.

[입력 형식]

- beautiful의 이름을 가진 배열이 주어집니다.

[출력 형식]

- 배열을 아름답게 만드는 최소 횟수를 구해주세요. 이미 아름다운 배열이라면 0을 반환해주시면 됩니다.
*/

function solution(beautiful) {
  let answer = 0;
  return answer;
}

console.log(solution([1, 2, 3, 4])); // output: 0
