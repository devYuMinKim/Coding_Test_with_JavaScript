// 제로베이스 프론트엔드 스쿨_Minimum
/*
[문제 설명]

N개의 숫자로 채워진 두 개의 배열이 주어집니다. 이 때, 두 배열에서 서로 같은 인덱스의 원소들을 교환할 수 있습니다.

두 배열이 서로 같은 인덱스에 있는 원소를 충분히 교환한 뒤, 첫 번째 배열과 두 번째 배열의 최댓값을 구하여 곱했을 때 만들어낼 수 있는 가장 작은 수를 구해주세요.

예를 들면, 첫 번째 배열 arr이 [1, 2, 6, 5, 1, 2]이었고, 두 번째 배열 brr이 [3, 4, 3, 2, 2, 5] 일 때 arr의 두번째 원소인 2와 brr의 두번째 원소인 4를 교환하고, arr의 6번째 원소인 2와 brr의 6번째 원소인 5를 교환한 뒤에,

arr = [1,4,6,5,1,5]인 상태와 brr = [3,2,3,2,2,2]인 상태가 만들어지고,

arr의 최댓값 6과 brr의 최댓값 3을 곱하여 18을
만들게 되면 어떤 원소를 교환하더라도 18보다 작은 수를 만들어 낼 수 없습니다.

[제한 사항]

- 배열 원소의 개수는 1개 이상 100개 이하입니다.

- 각 배열의 원소는 1 이상 10,000 이하의 값을 가지고 있습니다.

[입력 형식]

- 같은 개수의 원소를 가지고 있는 배열 arr, brr 두 가지가 주어집니다.

[출력 형식]

- 두 배열의 최댓값을 구하고, 최댓값끼리 곱한 수의 최솟값을 구해주세요.
*/

function solution(arr, brr) {
    let a = [...arr];
    let b = [...brr];

    let maxA = -1;
    let maxB = -1;
    for (let i = 0 ; i < a.length ; i++) {
        if (a[i] > maxA) maxA = a[i];
    }
    for (let i = 0 ; i < b.length ; i++) {
        if (b[i] > maxB) maxB = b[i];
    }

    for (let i = 0 ; i < a.length ; i++) {
        //if ()
    }

    a.sort(function(a, b) {
        return b - a;
    });
    b.sort(function(a, b) {
        return b - a;
    });

    return a[0] * b[0];
}